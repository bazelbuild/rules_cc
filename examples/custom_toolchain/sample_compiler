#!/bin/bash
#
# Sample script demonstrating custom C++ toolchain selection: handles
# the command that translates a cc_library's .cc (source file) into .o  (object
# file).

echo "$0: running sample cc_library compiler (produces .o output)."

# https://docs.bazel.build/versions/master/cc-toolchain-config-reference.html
# defines fancier ways to generate custom command lines. This script just shows
# the default, which looks like:
#
# examples/custom_toolchain/sample_compiler <various compiler flags> -o bazel-out/x86-fastbuild/bin/examples/custom_toolchain/_objs/buildme/buildme.o.

#!/bin/bash

OUTFILE=${!#}

if [[ "$OUTFILE" == @* ]]; then
    # Remove @
    OUTFILE=${OUTFILE#@}
    OUTFILE=${OUTFILE%-*}

    DOTD_FILE=${OUTFILE%.o}.d
else
    OUTFILE=${OUTFILE}
    DOTD_FILE=${OUTFILE%.o}.d
fi

# echo kaki = $OUTFILE
# echo kaki = $DOTD_FILE

echo "$0: sample output" > $OUTFILE
echo "$0: sample output changed" > $OUTFILE.change
echo "sample .d output ($0)" > $DOTD_FILE
